from django.shortcuts import render,redirect,get_object_or_404
from main.models import Book
from .models import *
from django.utils.crypto import get_random_string

def book(request,book_id):
    book = Book.objects.get(id=book_id)
    return render(request,'book/book.html',{'book':book})

def add_to_cart(request,book_id):
    session_id = request.session.get('cart_id')

    if not session_id:
        session_id = get_random_string(length=32)
        request.session['cart_id'] = session_id

    cart, _ = Cart.objects.get_or_create(session_id=session_id)

    book = Book.objects.get(id=book_id)
    cart_item,created = CartItem.objects.get_or_create(book=book,cart=cart)

    if not  created:
        cart_item.quantity += 1
        cart_item.save()
    cart_item = CartItem.objects.filter(cart=cart)
    print(cart_item)
    return redirect('book',book_id=book_id)


def cart_items_plus(request, item_id):
    session_id = request.session.get('cart_id')
    if not session_id:
        return redirect('cart_page')

    cart = get_object_or_404(Cart, session_id=session_id)
    cart_item = get_object_or_404(CartItem, id=item_id, cart=cart)

    cart_item.quantity += 1
    cart_item.save()

    return redirect('cart_page')


def cart_items_minus(request, item_id):
    session_id = request.session.get('cart_id')
    if not session_id:
        return redirect('cart_page')

    cart = get_object_or_404(Cart, session_id=session_id)
    cart_item = get_object_or_404(CartItem, id=item_id, cart=cart)

    if cart_item.quantity > 1:
        cart_item.quantity -= 1
        cart_item.save()
    else:
        cart_item.delete()

    return redirect('cart_page')